liip_imagine:
    # valid drivers options include "gd" or "gmagick" or "imagick"
    driver: "gd"
    cache: default
    data_loader: default
    default_image: null
    controller:
        filter_action: liip_imagine.controller:filterAction
        filter_runtime_action: liip_imagine.controller:filterRuntimeAction
    # configure resolvers
    resolvers :

        # setup the default resolver
        default :
            web_path : 
                web_root: "%kernel.project_dir%/public"
                cache_prefix: "images/cache"

    loaders:
        default:
            filesystem:
                data_root: "images/recipes"                
                bundle_resources:
                    enabled: true
        icons:
            filesystem:
                data_root: "images/icons"
                bundle_resources:
                    enabled: true
           
    # define your filter sets under this option
    filter_sets:

        # Create tiny image
        tiny_image:
            jpeg_quality: 85
            
            filters:
                strip: ~
                thumbnail:
                    size: [128, 96]
                    mode: outbound
                    allow_upscale: true
        
        # Create small image            
        small_image:
            jpeg_quality: 85
            
            filters:
                strip: ~
                thumbnail: 
                    size: [256, 192]
                    mode: outbound
                    allow_upscale: true
                    
        # Create half-image
        half_image:
            jpeg_quality: 85
            
            filters:
                strip: ~
                thumbnail:
                    size: [512, 384]
                    mode: outbound
                    allow_upscale: true            

        # Create Main Image                    
        main_image:
            jpeg_quality: 85
            
            filters:
                strip: ~
                thumbnail:
                    size: [1024, 768]
                    mode: outbound
                    allow_upscale: true
                    
        # Create banner image
        banner_image:
            jpeg_quality: 85
            
            filters:
                strip: ~
                crop:
                    size: [1024, 384]
                    start: [0,192]            
                
                    

        # an example thumbnail transformation definition
        squared_thumbnail:

            # set your image quality defaults
            jpeg_quality:          85
            png_compression_level: 8

            # setup the filter steps to apply for this transformation
            filters:

                # auto rotate the image using EXIF metadata
                auto_rotate: ~

                # strip the image of all metadata
                strip: ~

                # scale and square the image to the given dimensions
                thumbnail:
                    size:          [253, 253]
                    mode:          outbound
                    allow_upscale: true

                # create border by placing image on larger black background
                background:
                    size:     [256, 256]
                    position: center
                    color:    '#fff'                    
                    
        country_flag_tiny:
            data-loader: icons
            
            filters:
                thumbnail:
                    size:           [30,20]
                    mode:           outbound
                    allow_upscale:  true    